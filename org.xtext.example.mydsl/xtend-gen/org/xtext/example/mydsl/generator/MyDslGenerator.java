/**
 * generated by Xtext 2.14.0
 */
package org.xtext.example.mydsl.generator;

import com.google.common.collect.Iterators;
import finalStateMachine.FSM;
import finalStateMachine.State;
import finalStateMachine.Transition;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class MyDslGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    EObject _get = resource.getContents().get(0);
    FSM myfsm = ((FSM) _get);
    String _name = myfsm.getName();
    String _plus = (_name + ".java");
    fsa.generateFile(_plus, this.generateFSM(myfsm, resource));
    fsa.generateFile("State.java", this.generateState());
    fsa.generateFile("Transition.java", this.generateTransition());
  }
  
  public String generateTransition() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("public class Transition {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("public String name;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("public State input;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("public State output;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("public Transition(String p_name,State p_input,State p_output) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("this.name = p_name;\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("this.input = p_input;");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("this.output = p_output;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("public String getName() {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("return this.name;\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("public void setName(String p_name) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("this.name = p_name;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("public State getInput() {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("return this.input;\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("public void setInput(State p_state) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("this.input = p_state;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("public State getOutput() {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("return this.output;\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("public void setOutput(State p_state) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("this.output = p_state;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    String transitionClass = _builder.toString();
    return transitionClass;
  }
  
  public String generateState() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("public class State {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("public String name;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("public State(String p_name) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("this.name = p_name;\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("public String getName() {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("return this.name;\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("public void setName(String p_name) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("this.name = p_name;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    String stateClass = _builder.toString();
    return stateClass;
  }
  
  public String generateFSM(final FSM myfsm, final Resource resource) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("import java.util.ArrayList;");
    _builder.newLine();
    _builder.append("import java.util.concurrent.TimeUnit;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class ");
    String _name = myfsm.getName();
    _builder.append(_name);
    _builder.append(" {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ArrayList<State> allStates;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ArrayList<Transition> allTransitions;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public State initialState;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public State currentState;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public fsm (){");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.allStates = this.setAllStates();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.allTransitions = this.setAllTransitions();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.initialState = this.allStates.get(0);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.finalState = this.allStates.get(1);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private ArrayList<State> setAllStates() {");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("ArrayList<State> allRunTimeStates = new ArrayList<State>();");
    _builder.newLine();
    {
      Iterable<State> _iterable = IteratorExtensions.<State>toIterable(Iterators.<State>filter(resource.getAllContents(), State.class));
      for(final State state : _iterable) {
        _builder.append("                ");
        _builder.append("State state");
        String _name_1 = state.getName();
        _builder.append(_name_1, "                ");
        _builder.append(" = new State(\"");
        String _name_2 = state.getName();
        _builder.append(_name_2, "                ");
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
        _builder.append("                ");
        _builder.append("allRunTimeStates.add(state");
        String _name_3 = state.getName();
        _builder.append(_name_3, "                ");
        _builder.append("); ");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.newLine();
    _builder.append("                ");
    _builder.append("return allRunTimeStates;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private ArrayList<Transition> setAllTransitions() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("ArrayList<Transition> allRunTimeTransitions = new ArrayList<Transition>();");
    _builder.newLine();
    _builder.newLine();
    {
      Iterable<Transition> _iterable_1 = IteratorExtensions.<Transition>toIterable(Iterators.<Transition>filter(resource.getAllContents(), Transition.class));
      for(final Transition transition : _iterable_1) {
        _builder.append("\t            ");
        _builder.append("Transition transition");
        String _name_4 = transition.getInput().getName();
        _builder.append(_name_4, "\t            ");
        _builder.append("to");
        String _name_5 = transition.getOutput().getName();
        _builder.append(_name_5, "\t            ");
        _builder.append(" = new Transition(\"");
        String _name_6 = transition.getName();
        _builder.append(_name_6, "\t            ");
        _builder.append("\", returnStateFromArrayList(\"");
        String _name_7 = transition.getInput().getName();
        _builder.append(_name_7, "\t            ");
        _builder.append("\"), returnStateFromArrayList(\"");
        String _name_8 = transition.getOutput().getName();
        _builder.append(_name_8, "\t            ");
        _builder.append("\"));");
        _builder.newLineIfNotEmpty();
        _builder.append("\t            ");
        _builder.append("allRunTimeTransitions.add(transition");
        String _name_9 = transition.getInput().getName();
        _builder.append(_name_9, "\t            ");
        _builder.append("to");
        String _name_10 = transition.getOutput().getName();
        _builder.append(_name_10, "\t            ");
        _builder.append("); ");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return allRunTimeTransitions;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private State returnStateFromArrayList(String name) {\t\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this.allStates.stream().filter(o -> o.getName().equals(name)).findFirst().get();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static void main(String[] args)  throws InterruptedException{");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t ");
    _builder.append("fsm testFsm = new fsm();");
    _builder.newLine();
    _builder.append(" \t\t ");
    _builder.append("State finalState = testFsm.allStates.get(1);");
    _builder.newLine();
    _builder.append(" \t\t ");
    _builder.append("State currentState = testFsm.allStates.get(0);");
    _builder.newLine();
    _builder.append(" \t\t ");
    _builder.newLine();
    _builder.append("\t\t ");
    _builder.append("System.out.println(\"INITIAL\");");
    _builder.newLine();
    _builder.append("\t\t ");
    _builder.append("System.out.println(\"CurrentState = \" + currentState.name);");
    _builder.newLine();
    _builder.append("\t\t ");
    _builder.append("while(currentState != finalState) {");
    _builder.newLine();
    _builder.append("\t\t\t ");
    _builder.append("int j1 = 0;");
    _builder.newLine();
    _builder.append("\t\t\t ");
    _builder.append("while(j1 < testFsm.allTransitions.size()) {");
    _builder.newLine();
    _builder.append("\t\t\t\t ");
    _builder.append("if(currentState == testFsm.allTransitions.get(j1).getInput()) {");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("TimeUnit.SECONDS.sleep(2);");
    _builder.newLine();
    _builder.append("\t\t\t \t\t");
    _builder.append("System.out.println(testFsm.allTransitions.get(j1).getInput().getName() + \"->\" + testFsm.allTransitions.get(j1).getOutput().getName());");
    _builder.newLine();
    _builder.append("\t\t\t \t\t");
    _builder.append("currentState = testFsm.allTransitions.get(j1).getOutput();");
    _builder.newLine();
    _builder.append("\t\t\t \t\t");
    _builder.append("j1 = testFsm.allTransitions.size();");
    _builder.newLine();
    _builder.append("\t\t\t \t\t");
    _builder.append("System.out.println(\"CurrentState = \" + currentState.name);");
    _builder.newLine();
    _builder.append("\t\t\t \t");
    _builder.append("} else {");
    _builder.newLine();
    _builder.append("\t\t\t \t\t");
    _builder.append("j1++;");
    _builder.newLine();
    _builder.append("\t\t\t \t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t ");
    _builder.append("}\t\t\t ");
    _builder.newLine();
    _builder.append("\t\t ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t ");
    _builder.append("System.out.println(\"FINAL\");");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t\t ");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    String fsmClass = _builder.toString();
    return fsmClass;
  }
}
